NautilusIr {
execute() {
Block_0($1:ptr, $2:i32):
	$3 = 0 :i32
	$4 = 0 :i32
	br Block_3($3, $2, $4, $1) :void

Block_3($3:i32, $2:i32, $4:i32, $1:ptr):
	$7 = $4 < $2 :bool
	if $7 ? Block_1($2, $4, $3, $1) : Block_2($3) :void

Block_1($2:i32, $4:i32, $3:i32, $1:ptr):
	$13 = 4 :ui64
	$14 = $4 cast_to ui64 :ui64
	$16 = $14 * $13 :ui64
	$17 = $1 + $16 :ptr
	$20 = load($17) :i32
	$23 = $3 + $20 :i32
	$24 = 1 :i32
	$27 = $4 + $24 :i32
	br Block_3($23, $2, $27, $1) :void

Block_2($3:i32):
	return ($3) :i32
}
} //NESIR