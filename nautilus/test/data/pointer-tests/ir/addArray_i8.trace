NautilusIr {
execute() {
Block_0($1:ptr, $2:ptr, $3:i8):
	$4 = 0 :i8
	br Block_3($3, $4, $1, $2) :void

Block_3($3:i8, $4:i8, $1:ptr, $2:ptr):
	$7 = $4 < $3 :bool
	if $7 ? Block_1($3, $4, $1, $2) : Block_2() :void

Block_1($3:i8, $4:i8, $1:ptr, $2:ptr):
	$9 = $4 cast_to i32 :i32
	$13 = 1 :ui64
	$14 = $9 cast_to ui64 :ui64
	$16 = $14 * $13 :ui64
	$17 = $1 + $16 :ptr
	$20 = load($17) :i8
	$21 = $4 cast_to i32 :i32
	$25 = 1 :ui64
	$26 = $21 cast_to ui64 :ui64
	$28 = $26 * $25 :ui64
	$29 = $2 + $28 :ptr
	$32 = load($29) :i8
	$35 = $20 + $32 :i8
	$36 = $4 cast_to i32 :i32
	$40 = 1 :ui64
	$41 = $36 cast_to ui64 :ui64
	$43 = $41 * $40 :ui64
	$44 = $1 + $43 :ptr
	store($35, $44) :void
	$48 = 1 :i32
	$49 = $4 cast_to i32 :i32
	$51 = $49 + $48 :i32
	$52 = $51 cast_to i8 :i8
	br Block_3($3, $52, $1, $2) :void

Block_2():
	return :void
}
} //NESIR