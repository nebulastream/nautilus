NautilusIr {
execute() {
Block_0($1:i32):
	$2 = 0 :i32
	$3 = 1 :i32
	$6 = $1 > $3 :bool
	if $6 ? Block_1($1, $2) : Block_2($1, $2) :void

Block_1($1:i32, $2:i32):
	$8 = 1 :i32
	$11 = $2 + $8 :i32
	$12 = 2 :i32
	br Block_11($1, $11, $12) :void

Block_11($1:i32, $2:i32, $12:i32):
	$15 = $1 > $12 :bool
	if $15 ? Block_3($1, $2) : Block_4($1, $2) :void

Block_3($1:i32, $2:i32):
	$17 = 1 :i32
	$20 = $2 + $17 :i32
	$21 = 3 :i32
	br Block_12($1, $20, $21) :void

Block_12($1:i32, $2:i32, $21:i32):
	$24 = $1 > $21 :bool
	if $24 ? Block_5($1, $2) : Block_6($1, $2) :void

Block_5($1:i32, $2:i32):
	$26 = 1 :i32
	$29 = $2 + $26 :i32
	$30 = 4 :i32
	br Block_13($1, $29, $30) :void

Block_13($1:i32, $2:i32, $30:i32):
	$33 = $1 > $30 :bool
	if $33 ? Block_7($1, $2) : Block_8($2, $1) :void

Block_7($1:i32, $2:i32):
	$35 = 1 :i32
	$38 = $2 + $35 :i32
	$39 = 5 :i32
	br Block_14($38, $39, $1) :void

Block_14($2:i32, $39:i32, $1:i32):
	$42 = $1 > $39 :bool
	if $42 ? Block_9($2) : Block_10($2) :void

Block_9($2:i32):
	$44 = 1 :i32
	$47 = $2 + $44 :i32
	br Block_15($47) :void

Block_15($2:i32):
	return ($2) :i32

Block_10($2:i32):
	br Block_15($2) :void

Block_8($2:i32, $1:i32):
	$55 = 5 :i32
	br Block_14($2, $55, $1) :void

Block_6($1:i32, $2:i32):
	$53 = 4 :i32
	br Block_13($1, $2, $53) :void

Block_4($1:i32, $2:i32):
	$51 = 3 :i32
	br Block_12($1, $2, $51) :void

Block_2($1:i32, $2:i32):
	$49 = 2 :i32
	br Block_11($1, $2, $49) :void
}
} //NESIR